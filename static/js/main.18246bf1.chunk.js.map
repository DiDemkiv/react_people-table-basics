{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/CustomNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","props","person","isWoman","sex","to","slug","classNames","name","headers","id","title","PeopleTable","people","useParams","map","header","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","loadPeople","loadedPeople","peopleWithParents","fountFather","find","foundMother","Object","assign","useEffect","hasNoPeople","length","NotFoundPage","CustomNavLink","navLinkProps","isActive","Navbar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.18246bf1.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person } = props;\n  const isWoman = person.sex === 'f';\n\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({\n        'has-text-danger': isWoman,\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nconst headers = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const { people } = props;\n\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {headers.map((header) => (\n            <th key={header.id}>\n              {header.title}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n              key={person.slug}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n\n              <td>\n                {person.mother ? (\n                  <PersonLink person={person.mother} />\n                ) : (\n                  person.motherName ?? '-'\n                )}\n              </td>\n\n              <td>\n                {person.father ? (\n                  <PersonLink person={person.father} />\n                ) : (\n                  person.fatherName ?? '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      const peopleWithParents = loadedPeople.map((person) => {\n        const fountFather = loadedPeople.find(\n          (father) => father.name === person.fatherName,\n        );\n\n        const foundMother = loadedPeople.find(\n          (mother) => mother.name === person.motherName,\n        );\n\n        return Object.assign(person, {\n          father: fountFather,\n          mother: foundMother,\n        });\n      });\n\n      setPeople(peopleWithParents);\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const hasNoPeople = !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\n\ninterface Props {\n  to: To;\n  title: string;\n}\n\nexport const CustomNavLink: FC<Props> = (props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={(navLinkProps) => {\n        const { isActive } = navLinkProps;\n\n        return classNames('navbar-item', {\n          'has-background-grey-lighter': isActive,\n        });\n      }}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { CustomNavLink } from './CustomNavLink';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <CustomNavLink\n            to=\"/\"\n            title=\"Home\"\n          />\n\n          <CustomNavLink\n            to=\"/people\"\n            title=\"People\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}